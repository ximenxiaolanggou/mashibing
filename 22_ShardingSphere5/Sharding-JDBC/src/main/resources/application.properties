# 配置数据源的名称
spring.shardingsphere.datasource.names=ds1,ds2

  
# 配置数据源的具体内容
spring.shardingsphere.datasource.ds1.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds1.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ds1.url=jdbc:mysql://127.0.0.1:3306/sharding_sphere_1?serverTimezone=UTC
spring.shardingsphere.datasource.ds1.username=root
spring.shardingsphere.datasource.ds1.password=zhishun.cai

# 配置数据源的具体内容
spring.shardingsphere.datasource.ds2.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds2.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ds2.url=jdbc:mysql://127.0.0.1:3306/sharding_sphere_2?serverTimezone=UTC
spring.shardingsphere.datasource.ds2.username=root
spring.shardingsphere.datasource.ds2.password=zhishun.cai
  
  # 标准分片表配置(指定orders表的分布情况，配置表在哪个数据库中，表名称是什么)
spring.shardingsphere.rules.sharding.tables.orders.actual-data-nodes=ds$->{1..2}.orders_$->{1..2}


# 水平分库
# 分片列名称
spring.shardingsphere.rules.sharding.tables.orders.database-strategy.standard.sharding-column=order_no
# 分片算法名称
spring.shardingsphere.rules.sharding.tables.orders.database-strategy.standard.sharding-algorithm-name=inline_db

# 水平分表
# 分片列名称
spring.shardingsphere.rules.sharding.tables.orders.table-strategy.standard.sharding-column=customer_id
# 分片算法名称
spring.shardingsphere.rules.sharding.tables.orders.table-strategy.standard.sharding-algorithm-name=inline_table

  
  

  
#------------------------分片算法配置
# 行表达式分片算法
# 分片算法类型
spring.shardingsphere.rules.sharding.sharding-algorithms.inline_db.type=INLINE
# 分片算法属性配置
spring.shardingsphere.rules.sharding.sharding-algorithms.inline_db.props.algorithm-expression=ds$->{order_no%2+1}

#------------------------分片算法配置
# 行表达式分片算法
# 分片算法类型
spring.shardingsphere.rules.sharding.sharding-algorithms.inline_table.type=INLINE
# 分片算法属性配置
spring.shardingsphere.rules.sharding.sharding-algorithms.inline_table.props.algorithm-expression=orders_$->{user_id%2+1}
  
  
  #指定orders表里主键id生成策略
  # spring.shardingsphere.rules.sharding.tables.orders.key-generate-strategy.column=id
  # spring.shardingsphere.rules.sharding.tables.orders.key-generate-strategy.key-generator-name=snowflake
  
  #打开sql输出日志
spring.shardingsphere.props.sql.show=true

